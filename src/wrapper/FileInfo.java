package wrapper;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Future;
import org.bcos.web3j.abi.EventEncoder;
import org.bcos.web3j.abi.EventValues;
import org.bcos.web3j.abi.FunctionEncoder;
import org.bcos.web3j.abi.TypeReference;
import org.bcos.web3j.abi.datatypes.Event;
import org.bcos.web3j.abi.datatypes.Function;
import org.bcos.web3j.abi.datatypes.Type;
import org.bcos.web3j.abi.datatypes.Utf8String;
import org.bcos.web3j.abi.datatypes.generated.Int256;
import org.bcos.web3j.abi.datatypes.generated.Uint256;
import org.bcos.web3j.crypto.Credentials;
import org.bcos.web3j.protocol.Web3j;
import org.bcos.web3j.protocol.core.DefaultBlockParameter;
import org.bcos.web3j.protocol.core.methods.request.EthFilter;
import org.bcos.web3j.protocol.core.methods.response.Log;
import org.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.bcos.web3j.tx.Contract;
import org.bcos.web3j.tx.TransactionManager;
import rx.Observable;
import rx.functions.Func1;

/**
 * Auto generated code.<br>
 * <strong>Do not modify!</strong><br>
 * Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>, or {@link org.bcos.web3j.codegen.SolidityFunctionWrapperGenerator} to update.
 *
 * <p>Generated with web3j version none.
 */
public final class FileInfo extends Contract {
    private static final String BINARY = "6060604052341561000f57600080fd5b6040516020806200613e8339810160405280805190602001909190505080600081905550506160fa80620000446000396000f30060606040523615610097576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634086f69b1461009c578063640014d71461014157806371656d76146101a75780637456fed6146103d95780639526419a14610402578063dea4411c1461042b578063ea47b87114610551578063edeaa053146106c3578063f2c9ecd81461082c575b600080fd5b34156100a757600080fd5b6100c66004808035906020019091908035906020019091905050610855565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101065780820151818401526020810190506100eb565b50505050905090810190601f1680156101335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014c57600080fd5b6101a5600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091908035906020019091905050610a8b565b005b34156101b257600080fd5b6103d7600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610d68565b005b34156103e457600080fd5b6103ec6112f2565b6040518082815260200191505060405180910390f35b341561040d57600080fd5b6104156112ff565b6040518082815260200191505060405180910390f35b341561043657600080fd5b61054f600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061130c565b005b341561055c57600080fd5b6106c1600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506129ad565b005b34156106ce57600080fd5b61082a600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050612ed8565b005b341561083757600080fd5b61083f6133e6565b6040518082815260200191505060405180910390f35b61085d615ef5565b600080600084860292506001858401039150600580549050821015156108d9576000600580549050111561089b5760016005805490500391506108d8565b6040805190810160405280600281526020017f5b5d0000000000000000000000000000000000000000000000000000000000008152509350610a82565b5b6109216040805190810160405280600181526020017f5b00000000000000000000000000000000000000000000000000000000000000815250856133ef90919063ffffffff16565b93508290505b8181111515610a37578281141515610984576109816040805190810160405280600181526020017f2c00000000000000000000000000000000000000000000000000000000000000815250856133ef90919063ffffffff16565b93505b610a28610a19600260058481548110151561099b57fe5b90600052602060002090016040518082805460018160011615610100020316600290048015610a015780601f106109df576101008083540402835291820191610a01565b820191906000526020600020905b8154815290600101906020018083116109ed575b50509150509081526020016040518091039020613457565b856133ef90919063ffffffff16565b93508080600101915050610927565b610a7f6040805190810160405280600181526020017f5d00000000000000000000000000000000000000000000000000000000000000815250856133ef90919063ffffffff16565b93505b50505092915050565b610a93615ef5565b600180811115610a9f57fe5b6002846040518082805190602001908083835b602083101515610ad75780518252602082019150602081019050602083039250610ab2565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff166001811115610b2657fe5b141515610b3257610d63565b816002846040518082805190602001908083835b602083101515610b6b5780518252602082019150602081019050602083039250610b46565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206006018190555060206040519081016040528060008152509050610c396040805190810160405280600881526020017f7b225f6964223a22000000000000000000000000000000000000000000000000815250846040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050610cc46040805190810160405280600a81526020017f225f737461747573223a00000000000000000000000000000000000000000000815250610c7d84613c11565b6040805190810160405280600181526020017f7d0000000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90507f789b8c9ba33acec3ef460cef01e01f58c5970120a15a1de88aab90ac001bea6b816040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d28578082015181840152602081019050610d0d565b50505050905090810190601f168015610d555780820380516001836020036101000a031916815260200191505b509250505060405180910390a15b505050565b600180811115610d7457fe5b6001896040518082805190602001908083835b602083101515610dac5780518252602082019150602081019050602083039250610d87565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060090160009054906101000a900460ff166001811115610dfb57fe5b1415610f2457610e118888888888888888613deb565b7fde28e2794ca1e2e05ffceb5c4211dfab144ef30223d77e4afb30be56bb63240d610ea560018a6040518082805190602001908083835b602083101515610e6d5780518252602082019150602081019050602083039250610e48565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061422a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ee5578082015181840152602081019050610eca565b50505050905090810190601f168015610f125780820380516001836020036101000a031916815260200191505b509250505060405180910390a16112e8565b60006001811115610f3157fe5b6001896040518082805190602001908083835b602083101515610f695780518252602082019150602081019050602083039250610f44565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060090160009054906101000a900460ff166001811115610fb857fe5b1415610ffb5760078054806001018281610fd29190615f09565b916000526020600020900160008a90919091509080519060200190610ff8929190615f35565b50505b610140604051908101604052808981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020016000815260200160018081111561104b57fe5b8152506001896040518082805190602001908083835b6020831015156110865780518252602082019150602081019050602083039250611061565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000190805190602001906110d5929190615fb5565b5060208201518160010190805190602001906110f2929190615fb5565b50604082015181600201908051906020019061110f929190615fb5565b50606082015181600301908051906020019061112c929190615fb5565b506080820151816004019080519060200190611149929190615fb5565b5060a0820151816005019080519060200190611166929190615fb5565b5060c0820151816006019080519060200190611183929190615fb5565b5060e08201518160070190805190602001906111a0929190615fb5565b5061010082015181600801556101208201518160090160006101000a81548160ff021916908360018111156111d157fe5b02179055509050507fde28e2794ca1e2e05ffceb5c4211dfab144ef30223d77e4afb30be56bb63240d61126d60018a6040518082805190602001908083835b6020831015156112355780518252602082019150602081019050602083039250611210565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061422a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156112ad578082015181840152602081019050611292565b50505050905090810190601f1680156112da5780820380516001836020036101000a031916815260200191505b509250505060405180910390a15b5050505050505050565b6000600580549050905090565b6000600780549050905090565b611314615ef5565b6000806000602060405190810160405280600081525093506000600181111561133957fe5b6001886040518082805190602001908083835b602083101515611371578051825260208201915060208101905060208303925061134c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060090160009054906101000a900460ff1660018111156113c057fe5b148061145d5750600060018111156113d457fe5b6002896040518082805190602001908083835b60208310151561140c57805182526020820191506020810190506020830392506113e7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff16600181111561145b57fe5b145b156115f4576115186040805190810160405280600981526020017f7b226572726f72223a00000000000000000000000000000000000000000000008152506040805190810160405280602081526020017f22757365724964206f722066696c654964206e6f7420457869737473212121228152506040805190810160405280600181526020017f7d0000000000000000000000000000000000000000000000000000000000000081525087613b55909392919063ffffffff16565b93507fdf42631099a4f6c5a9c297f64f6d3524eb3b581aecd0675e408a346e2954e99384604051808060200180602001838103835260018152602001807f3000000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156115b4578082015181840152602081019050611599565b50505050905090810190601f1680156115e15780820380516001836020036101000a031916815260200191505b50935050505060405180910390a16129a3565b6117446040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152508460018a6040518082805190602001908083835b6020831015156116665780518252602082019150602081019050602083039250611641565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117305780601f1061170557610100808354040283529160200191611730565b820191906000526020600020905b81548152906001019060200180831161171357829003601f168201915b5050505050614bf69092919063ffffffff16565b6002886040518082805190602001908083835b60208310151561177c5780518252602082019150602081019050602083039250611757565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002015461186e8460008154811015156117c557fe5b90600052602060002090018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118645780601f1061183957610100808354040283529160200191611864565b820191906000526020600020905b81548152906001019060200180831161184757829003601f168201915b5050505050614d4c565b1215611a065761192a6040805190810160405280600981526020017f7b226572726f72223a00000000000000000000000000000000000000000000008152506040805190810160405280601f81526020017f22446f6573206e6f74206d6565742074686520737472617465677921212122008152506040805190810160405280600181526020017f7d0000000000000000000000000000000000000000000000000000000000000081525087613b55909392919063ffffffff16565b93507fdf42631099a4f6c5a9c297f64f6d3524eb3b581aecd0675e408a346e2954e99384604051808060200180602001838103835260018152602001807f3000000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156119c65780820151818401526020810190506119ab565b50505050905090810190601f1680156119f35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a16129a3565b60009150600190505b8280549050811015611c0057611be56002896040518082805190602001908083835b602083101515611a565780518252602082019150602081019050602083039250611a31565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b205780601f10611af557610100808354040283529160200191611b20565b820191906000526020600020905b815481529060010190602001808311611b0357829003601f168201915b50505050508483815481101515611b3357fe5b90600052602060002090018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bd25780601f10611ba757610100808354040283529160200191611bd2565b820191906000526020600020905b815481529060010190602001808311611bb557829003601f168201915b505050505061509290919063ffffffff16565b1515611bf057611bf5565b600191505b806001019050611a0f565b81156127ee57608060405190810160405280878152602001898152602001888152602001868152506003876040518082805190602001908083835b602083101515611c605780518252602082019150602081019050602083039250611c3b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000019080519060200190611caf929190615fb5565b506020820151816001019080519060200190611ccc929190615fb5565b506040820151816002019080519060200190611ce9929190615fb5565b506060820151816003019080519060200190611d06929190615fb5565b5090505060068054806001018281611d1e9190615f09565b916000526020600020900160008890919091509080519060200190611d44929190615f35565b50506040805190810160405280600181526020017f7b000000000000000000000000000000000000000000000000000000000000008152509350611f15611ecf6040805190810160405280600681526020017f66696c654964000000000000000000000000000000000000000000000000000081525060018a6040518082805190602001908083835b602083101515611df25780518252602082019150602081019050602083039250611dcd565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ebc5780601f10611e9157610100808354040283529160200191611ebc565b820191906000526020600020905b815481529060010190602001808311611e9f57829003601f168201915b50505050506151d490919063ffffffff16565b6040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152508661544b9092919063ffffffff16565b93506120ae6120686040805190810160405280600a81526020017f5f726571756573744964000000000000000000000000000000000000000000008152506003896040518082805190602001908083835b602083101515611f8b5780518252602082019150602081019050602083039250611f66565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120555780601f1061202a57610100808354040283529160200191612055565b820191906000526020600020905b81548152906001019060200180831161203857829003601f168201915b50505050506151d490919063ffffffff16565b6040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152508661544b9092919063ffffffff16565b93506122476122016040805190810160405280600681526020017f757365724964000000000000000000000000000000000000000000000000000081525060018a6040518082805190602001908083835b60208310151561212457805182526020820191506020810190506020830392506120ff565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121ee5780601f106121c3576101008083540402835291602001916121ee565b820191906000526020600020905b8154815290600101906020018083116121d157829003601f168201915b50505050506151d490919063ffffffff16565b6040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152508661544b9092919063ffffffff16565b93506123e061239a6040805190810160405280600881526020017f66696c654164647200000000000000000000000000000000000000000000000081525060018a6040518082805190602001908083835b6020831015156122bd5780518252602082019150602081019050602083039250612298565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123875780601f1061235c57610100808354040283529160200191612387565b820191906000526020600020905b81548152906001019060200180831161236a57829003601f168201915b50505050506151d490919063ffffffff16565b6040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152508661544b9092919063ffffffff16565b93506125796125336040805190810160405280600e81526020017f5075624b6579546f53796d6b657900000000000000000000000000000000000081525060018a6040518082805190602001908083835b6020831015156124565780518252602082019150602081019050602083039250612431565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125205780601f106124f557610100808354040283529160200191612520565b820191906000526020600020905b81548152906001019060200180831161250357829003601f168201915b50505050506151d490919063ffffffff16565b6040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152508661544b9092919063ffffffff16565b93506127126126cc6040805190810160405280600681526020017f7075624b6579000000000000000000000000000000000000000000000000000081525060028b6040518082805190602001908083835b6020831015156125ef57805182526020820191506020810190506020830392506125ca565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126b95780601f1061268e576101008083540402835291602001916126b9565b820191906000526020600020905b81548152906001019060200180831161269c57829003601f168201915b50505050506151d490919063ffffffff16565b6040805190810160405280600181526020017f7d000000000000000000000000000000000000000000000000000000000000008152508661544b9092919063ffffffff16565b93507fdf42631099a4f6c5a9c297f64f6d3524eb3b581aecd0675e408a346e2954e99384604051808060200180602001838103835260018152602001807f3100000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156127ae578082015181840152602081019050612793565b50505050905090810190601f1680156127db5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a16129a3565b6128cb6040805190810160405280600981526020017f7b226572726f72223a0000000000000000000000000000000000000000000000815250606060405190810160405280602181526020017f22446f6573206e6f74206d65657420746865206465706172746d656e7421212181526020017f22000000000000000000000000000000000000000000000000000000000000008152506040805190810160405280600181526020017f7d0000000000000000000000000000000000000000000000000000000000000081525087613b55909392919063ffffffff16565b93507fdf42631099a4f6c5a9c297f64f6d3524eb3b581aecd0675e408a346e2954e99384604051808060200180602001838103835260018152602001807f3000000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b8381101561296757808201518184015260208101905061294c565b50505050905090810190601f1680156129945780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15b5050505050505050565b6001808111156129b957fe5b6002876040518082805190602001908083835b6020831015156129f157805182526020820191506020810190506020830392506129cc565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff166001811115612a4057fe5b1415612b6757612a548686868686866154e7565b7f66ab3fea2083d9ba15d99b595186fe7fc18e6eba393c0fc056f420e96c3caa44612ae86002886040518082805190602001908083835b602083101515612ab05780518252602082019150602081019050602083039250612a8b565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020613457565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015612b28578082015181840152602081019050612b0d565b50505050905090810190601f168015612b555780820380516001836020036101000a031916815260200191505b509250505060405180910390a1612ed0565b60006001811115612b7457fe5b6002876040518082805190602001908083835b602083101515612bac5780518252602082019150602081019050602083039250612b87565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff166001811115612bfb57fe5b1415612c3e5760058054806001018281612c159190615f09565b916000526020600020900160008890919091509080519060200190612c3b929190615f35565b50505b6101006040519081016040528087815260200186815260200185815260200184815260200183815260200182815260200160008152602001600180811115612c8257fe5b8152506002876040518082805190602001908083835b602083101515612cbd5780518252602082019150602081019050602083039250612c98565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000019080519060200190612d0c929190615fb5565b506020820151816001019080519060200190612d29929190615fb5565b50604082015181600201556060820151816003019080519060200190612d50929190615fb5565b506080820151816004019080519060200190612d6d929190615fb5565b5060a0820151816005019080519060200190612d8a929190615fb5565b5060c0820151816006015560e08201518160070160006101000a81548160ff02191690836001811115612db957fe5b02179055509050507f66ab3fea2083d9ba15d99b595186fe7fc18e6eba393c0fc056f420e96c3caa44612e556002886040518082805190602001908083835b602083101515612e1d5780518252602082019150602081019050602083039250612df8565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020613457565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015612e95578082015181840152602081019050612e7a565b50505050905090810190601f168015612ec25780820380516001836020036101000a031916815260200191505b509250505060405180910390a15b505050505050565b612ee0615ef5565b60a060405190810160405280878152602001868152602001858152602001848152602001838152506004876040518082805190602001908083835b602083101515612f405780518252602082019150602081019050602083039250612f1b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000019080519060200190612f8f929190615fb5565b506020820151816001019080519060200190612fac929190615fb5565b506040820151816002019080519060200190612fc9929190615fb5565b506060820151816003019080519060200190612fe6929190615fb5565b506080820151816004019080519060200190613003929190615fb5565b509050506008805480600101828161301b9190615f09565b916000526020600020900160008890919091509080519060200190613041929190615f35565b50506040805190810160405280600181526020017f7b0000000000000000000000000000000000000000000000000000000000000081525090506132126131cc6040805190810160405280600681526020017f75736572496400000000000000000000000000000000000000000000000000008152506003886040518082805190602001908083835b6020831015156130ef57805182526020820191506020810190506020830392506130ca565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156131b95780601f1061318e576101008083540402835291602001916131b9565b820191906000526020600020905b81548152906001019060200180831161319c57829003601f168201915b50505050506151d490919063ffffffff16565b6040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152508361544b9092919063ffffffff16565b90506133076040805190810160405280600b81526020017f22726573706f6e7365223a0000000000000000000000000000000000000000008152506132c06004896040518082805190602001908083835b6020831015156132885780518252602082019150602081019050602083039250613263565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061580e565b6040805190810160405280600181526020017f7d0000000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90507f9b7f1e7774f1a2492415f0a3969bfd17a6d007836a9bf85b4a84f2f2a50de8f181604051808060200180602001838103835260018152602001807f3100000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156133a3578082015181840152602081019050613388565b50505050905090810190601f1680156133d05780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1505050505050565b60008054905090565b6133f7615ef5565b6000806000845186510160405180591061340e5750595b9080825280602002602001820160405250935060208601925060208501915060208401905061343f81848851615dee565b61344e86518201838751615dee565b50505092915050565b61345f615ef5565b6040805190810160405280600181526020017f7b0000000000000000000000000000000000000000000000000000000000000081525090506135b46040805190810160405280600b81526020017f225f757365724964223a22000000000000000000000000000000000000000000815250836000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156135685780601f1061353d57610100808354040283529160200191613568565b820191906000526020600020905b81548152906001019060200180831161354b57829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90506136d36040805190810160405280600b81526020017f225f7075624b6579223a22000000000000000000000000000000000000000000815250836001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156136875780601f1061365c57610100808354040283529160200191613687565b820191906000526020600020905b81548152906001019060200180831161366a57829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90506137626040805190810160405280600981526020017f225f72616e6b223a22000000000000000000000000000000000000000000000081525061371b8460020154613c11565b6040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90506138816040805190810160405280600f81526020017f225f6465706172746d656e74223a220000000000000000000000000000000000815250836003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156138355780601f1061380a57610100808354040283529160200191613835565b820191906000526020600020905b81548152906001019060200180831161381857829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90506139a06040805190810160405280600f81526020017f225f63726561746554696d65223a220000000000000000000000000000000000815250836004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139545780601f1061392957610100808354040283529160200191613954565b820191906000526020600020905b81548152906001019060200180831161393757829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050613abf6040805190810160405280600f81526020017f225f75706461746554696d65223a220000000000000000000000000000000000815250836005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613a735780601f10613a4857610100808354040283529160200191613a73565b820191906000526020600020905b815481529060010190602001808311613a5657829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050613b4e6040805190810160405280600b81526020017f225f737461747573223a22000000000000000000000000000000000000000000815250613b078460060154613c11565b6040805190810160405280600281526020017f227d00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050919050565b613b5d615ef5565b600080600080600080875189518b518d51010101604051805910613b7e5750595b9080825280602002602001820160405250965060208b01955060208a01945060208901935060208801925060208701915060009050613bc1818301878d51615dee565b8a5181019050613bd5818301868c51615dee565b895181019050613be9818301858b51615dee565b885181019050613bfd818301848a51615dee565b875181019050505050505050949350505050565b613c19615ef5565b600080600080600080871415613c66576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509550613de1565b86945060019350600092506000871215613c8d578660000394506000935082806001019350505b8491505b6000821115613cb657600a82811515613ca657fe5b0491508280600101935050613c91565b8260ff16604051805910613cc75750595b90808252806020026020018201604052509550831515613d42577f2d00000000000000000000000000000000000000000000000000000000000000866000815181101515613d1157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b6001830390505b6000851115613de0576030600a86811515613d6057fe5b06017f01000000000000000000000000000000000000000000000000000000000000000286828060019003935060ff16815181101515613d9c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85811515613dd857fe5b049450613d49565b5b5050505050919050565b600180811115613df757fe5b6002896040518082805190602001908083835b602083101515613e2f5780518252602082019150602081019050602083039250613e0a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff166001811115613e7e57fe5b141515613e8a57614220565b866001896040518082805190602001908083835b602083101515613ec35780518252602082019150602081019050602083039250613e9e565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001019080519060200190613f0c929190615f35565b50856001896040518082805190602001908083835b602083101515613f465780518252602082019150602081019050602083039250613f21565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002019080519060200190613f8f929190615f35565b50846001896040518082805190602001908083835b602083101515613fc95780518252602082019150602081019050602083039250613fa4565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003019080519060200190614012929190615f35565b50836001896040518082805190602001908083835b60208310151561404c5780518252602082019150602081019050602083039250614027565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206004019080519060200190614095929190615f35565b50826001896040518082805190602001908083835b6020831015156140cf57805182526020820191506020810190506020830392506140aa565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206005019080519060200190614118929190615f35565b50816001896040518082805190602001908083835b602083101515614152578051825260208201915060208101905060208303925061412d565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600601908051906020019061419b929190615f35565b50806001896040518082805190602001908083835b6020831015156141d557805182526020820191506020810190506020830392506141b0565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600701908051906020019061421e929190615f35565b505b5050505050505050565b614232615ef5565b6040805190810160405280600181526020017f7b0000000000000000000000000000000000000000000000000000000000000081525090506143876040805190810160405280600b81526020017f225f66696c654964223a22000000000000000000000000000000000000000000815250836000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561433b5780601f106143105761010080835404028352916020019161433b565b820191906000526020600020905b81548152906001019060200180831161431e57829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90506144a66040805190810160405280600d81526020017f225f66696c6541646472223a2200000000000000000000000000000000000000815250836001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561445a5780601f1061442f5761010080835404028352916020019161445a565b820191906000526020600020905b81548152906001019060200180831161443d57829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90506145c56040805190810160405280601381526020017f225f5075624b6579546f53796d6b6579223a2200000000000000000000000000815250836002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156145795780601f1061454e57610100808354040283529160200191614579565b820191906000526020600020905b81548152906001019060200180831161455c57829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90506146e46040805190810160405280600981526020017f225f706c6f74223a220000000000000000000000000000000000000000000000815250836003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156146985780601f1061466d57610100808354040283529160200191614698565b820191906000526020600020905b81548152906001019060200180831161467b57829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90506148036040805190810160405280601081526020017f225f6465736372697074696f6e223a2200000000000000000000000000000000815250836004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156147b75780601f1061478c576101008083540402835291602001916147b7565b820191906000526020600020905b81548152906001019060200180831161479a57829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b90506149226040805190810160405280600f81526020017f225f75706c6f616454696d65223a220000000000000000000000000000000000815250836005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156148d65780601f106148ab576101008083540402835291602001916148d6565b820191906000526020600020905b8154815290600101906020018083116148b957829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050614a416040805190810160405280600b81526020017f225f757365724964223a22000000000000000000000000000000000000000000815250836006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156149f55780601f106149ca576101008083540402835291602001916149f5565b820191906000526020600020905b8154815290600101906020018083116149d857829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050614b606040805190810160405280600f81526020017f225f6465706172746d656e74223a220000000000000000000000000000000000815250836007018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614b145780601f10614ae957610100808354040283529160200191614b14565b820191906000526020600020905b815481529060010190602001808311614af757829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050614bef6040805190810160405280600b81526020017f225f737461747573223a22000000000000000000000000000000000000000000815250614ba88460080154613c11565b6040805190810160405280600281526020017f227d00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050919050565b600080600080600080614c07615ef5565b60008097505b8880549050881015614c49578888815481101515614c2757fe5b90600052602060002090016000614c3e9190616035565b876001019750614c0d565b60008981614c579190615f09565b5060208b01965060208a019550600094505b600115614d3f576000925060008a511115614cb05786614c91868d5103878a018d518a615e39565b0393508a51841015614ca65760019250614cab565b8a5193505b614cb5565b8a5193505b848403604051805910614cc55750595b90808252806020026020018201604052509150602082019050614ced81868901878703615dee565b895184019450888054806001018281614d069190615f09565b916000526020600020900160008490919091509080519060200190614d2c929190615f35565b5050821515614d3a57614d3f565b614c69565b5050505050505050505050565b60008060008060009350600085511415614d655761508a565b600092505b84518361ffff161015614e4057848361ffff16815181101515614d8957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004915060208260ff161480614e0e575060098260ff16145b80614e1c5750600d8260ff16145b80614e2a5750600a8260ff16145b1515614e3557614e40565b826001019250614d6a565b600190507f2b00000000000000000000000000000000000000000000000000000000000000858461ffff16815181101515614e7757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415614efb57600190508280600101935050614faf565b7f2d00000000000000000000000000000000000000000000000000000000000000858461ffff16815181101515614f2e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415614fae576000905082806001019350505b5b5b84518361ffff16101561507b57848361ffff16815181101515614fcf57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004915060308260ff1610158015615057575060398260ff1611155b15156150625761508a565b6030820360ff16600a8502019350826001019250614fb0565b801515615089578360000393505b5b505050919050565b600080825184511415156150a957600091506151cd565b600090505b83518110156151c85782818151811015156150c557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916848281518110151561514057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415156151bd57600091506151cd565b8060010190506150ae565b600191505b5092915050565b6151dc615ef5565b60008060008060058651885101016040518059106151f75750595b90808252806020026020018201604052509450602087019350602086019250602085019150600090507f2200000000000000000000000000000000000000000000000000000000000000858280600101935081518110151561525557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350615293818301848851615dee565b8551810190507f220000000000000000000000000000000000000000000000000000000000000085828060010193508151811015156152ce57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f3a00000000000000000000000000000000000000000000000000000000000000858280600101935081518110151561533357fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f2200000000000000000000000000000000000000000000000000000000000000858280600101935081518110151561539857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506153d6818301858951615dee565b8651810190507f2200000000000000000000000000000000000000000000000000000000000000858280600101935081518110151561541157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505050505092915050565b615453615ef5565b6000806000806000865188518a5101016040518059106154705750595b90808252806020026020018201604052509550602089019450602088019350602087019250602086019150600090506154ad818301868b51615dee565b8851810190506154c1818301858a51615dee565b8751810190506154d5818301848951615dee565b86518101905050505050509392505050565b6001808111156154f357fe5b6002876040518082805190602001908083835b60208310151561552b5780518252602082019150602081019050602083039250615506565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff16600181111561557a57fe5b14151561558657615806565b846002876040518082805190602001908083835b6020831015156155bf578051825260208201915060208101905060208303925061559a565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001019080519060200190615608929190615f35565b50836002876040518082805190602001908083835b602083101515615642578051825260208201915060208101905060208303925061561d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020181905550826002876040518082805190602001908083835b6020831015156156b55780518252602082019150602081019050602083039250615690565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030190805190602001906156fe929190615f35565b50816002876040518082805190602001908083835b6020831015156157385780518252602082019150602081019050602083039250615713565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206004019080519060200190615781929190615f35565b50806002876040518082805190602001908083835b6020831015156157bb5780518252602082019150602081019050602083039250615796565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206005019080519060200190615804929190615f35565b505b505050505050565b615816615ef5565b6040805190810160405280600181526020017f7b00000000000000000000000000000000000000000000000000000000000000815250905061596b6040805190810160405280600f81526020017f225f726573706f6e73654964223a220000000000000000000000000000000000815250836000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561591f5780601f106158f45761010080835404028352916020019161591f565b820191906000526020600020905b81548152906001019060200180831161590257829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050615a8a6040805190810160405280600e81526020017f225f726571756573744964223a22000000000000000000000000000000000000815250836001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615a3e5780601f10615a1357610100808354040283529160200191615a3e565b820191906000526020600020905b815481529060010190602001808311615a2157829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050615ba96040805190810160405280600b81526020017f225f66696c654964223a22000000000000000000000000000000000000000000815250836002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615b5d5780601f10615b3257610100808354040283529160200191615b5d565b820191906000526020600020905b815481529060010190602001808311615b4057829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050615cc86040805190810160405280601381526020017f225f5075624b6579546f53796d6b6579223a2200000000000000000000000000815250836003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615c7c5780601f10615c5157610100808354040283529160200191615c7c565b820191906000526020600020905b815481529060010190602001808311615c5f57829003601f168201915b50505050506040805190810160405280600281526020017f222c00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050615de76040805190810160405280600d81526020017f225f66696c6541646472223a2200000000000000000000000000000000000000815250836004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615d9b5780601f10615d7057610100808354040283529160200191615d9b565b820191906000526020600020905b815481529060010190602001808311615d7e57829003601f168201915b50505050506040805190810160405280600281526020017f227d00000000000000000000000000000000000000000000000000000000000081525084613b55909392919063ffffffff16565b9050919050565b60005b602082101515615e165782518452602084019350602083019250602082039150615df1565b6001826020036101000a0390508019835116818551168181178652505050505050565b60008060008060008887111515615ee357602087111515615e9a5760018760200360080260020a031980875116888b038a018a96505b818388511614615e8f57600187019650806001880310615e6f578b8b0196505b505050839450615ee9565b8686209150879350600092505b86890383111515615ee2578684209050806000191682600019161415615ecf57839450615ee9565b6001840193508280600101935050615ea7565b5b88880194505b50505050949350505050565b602060405190810160405280600081525090565b815481835581811511615f3057818360005260206000209182019101615f2f919061607d565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615f7657805160ff1916838001178555615fa4565b82800160010185558215615fa4579182015b82811115615fa3578251825591602001919060010190615f88565b5b509050615fb191906160a9565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615ff657805160ff1916838001178555616024565b82800160010185558215616024579182015b82811115616023578251825591602001919060010190616008565b5b50905061603191906160a9565b5090565b50805460018160011615610100020316600290046000825580601f1061605b575061607a565b601f01602090049060005260206000209081019061607991906160a9565b5b50565b6160a691905b808211156160a257600081816160999190616035565b50600101616083565b5090565b90565b6160cb91905b808211156160c75760008160009055506001016160af565b5090565b905600a165627a7a72305820b21e12a969de1b20941d3d3d206f419ea6cb78e16b504342ffff8cad3907a4c90029";

    private FileInfo(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    private FileInfo(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public List<NewUserEventResponse> getNewUserEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("NewUser", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<NewUserEventResponse> responses = new ArrayList<NewUserEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            NewUserEventResponse typedResponse = new NewUserEventResponse();
            typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<NewUserEventResponse> newUserEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("NewUser", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, NewUserEventResponse>() {
            @Override
            public NewUserEventResponse call(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                NewUserEventResponse typedResponse = new NewUserEventResponse();
                typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public List<NewFileEventResponse> getNewFileEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("NewFile", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<NewFileEventResponse> responses = new ArrayList<NewFileEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            NewFileEventResponse typedResponse = new NewFileEventResponse();
            typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<NewFileEventResponse> newFileEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("NewFile", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, NewFileEventResponse>() {
            @Override
            public NewFileEventResponse call(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                NewFileEventResponse typedResponse = new NewFileEventResponse();
                typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public List<NewStatusEventResponse> getNewStatusEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("NewStatus", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<NewStatusEventResponse> responses = new ArrayList<NewStatusEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            NewStatusEventResponse typedResponse = new NewStatusEventResponse();
            typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<NewStatusEventResponse> newStatusEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("NewStatus", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, NewStatusEventResponse>() {
            @Override
            public NewStatusEventResponse call(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                NewStatusEventResponse typedResponse = new NewStatusEventResponse();
                typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public List<RequestFileEventEventResponse> getRequestFileEventEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("RequestFileEvent", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<RequestFileEventEventResponse> responses = new ArrayList<RequestFileEventEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            RequestFileEventEventResponse typedResponse = new RequestFileEventEventResponse();
            typedResponse.state = (Utf8String) eventValues.getNonIndexedValues().get(0);
            typedResponse.info = (Utf8String) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<RequestFileEventEventResponse> requestFileEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("RequestFileEvent", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, RequestFileEventEventResponse>() {
            @Override
            public RequestFileEventEventResponse call(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                RequestFileEventEventResponse typedResponse = new RequestFileEventEventResponse();
                typedResponse.state = (Utf8String) eventValues.getNonIndexedValues().get(0);
                typedResponse.info = (Utf8String) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public List<ResponseFileEventEventResponse> getResponseFileEventEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("ResponseFileEvent", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<ResponseFileEventEventResponse> responses = new ArrayList<ResponseFileEventEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            ResponseFileEventEventResponse typedResponse = new ResponseFileEventEventResponse();
            typedResponse.state = (Utf8String) eventValues.getNonIndexedValues().get(0);
            typedResponse.info = (Utf8String) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ResponseFileEventEventResponse> responseFileEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("ResponseFileEvent", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, ResponseFileEventEventResponse>() {
            @Override
            public ResponseFileEventEventResponse call(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                ResponseFileEventEventResponse typedResponse = new ResponseFileEventEventResponse();
                typedResponse.state = (Utf8String) eventValues.getNonIndexedValues().get(0);
                typedResponse.info = (Utf8String) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Future<Utf8String> getUserByPage(Uint256 _pageNo, Uint256 _pageSize) {
        Function function = new Function("getUserByPage", 
                Arrays.<Type>asList(_pageNo, _pageSize), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> updateStatus(Utf8String _id, Int256 _status) {
        Function function = new Function("updateStatus", Arrays.<Type>asList(_id, _status), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> UploadFile(Utf8String _fileId, Utf8String _fileAddr, Utf8String _PubKeyToSymkey, Utf8String _plot, Utf8String _description, Utf8String _uploadTime, Utf8String _userId, Utf8String _department) {
        Function function = new Function("UploadFile", Arrays.<Type>asList(_fileId, _fileAddr, _PubKeyToSymkey, _plot, _description, _uploadTime, _userId, _department), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Uint256> getUserLength() {
        Function function = new Function("getUserLength", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Uint256> getFileLength() {
        Function function = new Function("getFileLength", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> RequestFile(Utf8String _userId, Utf8String _fileId, Utf8String _requestId, Utf8String _requestTime) {
        Function function = new Function("RequestFile", Arrays.<Type>asList(_userId, _fileId, _requestId, _requestTime), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> addUser(Utf8String _userId, Utf8String _pubKey, Int256 _rank, Utf8String _department, Utf8String _createTime, Utf8String _updateTime) {
        Function function = new Function("addUser", Arrays.<Type>asList(_userId, _pubKey, _rank, _department, _createTime, _updateTime), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> ResponseFile(Utf8String _responseId, Utf8String _requestId, Utf8String _fileId, Utf8String _PubKeyToSymkey, Utf8String _fileAddr) {
        Function function = new Function("ResponseFile", Arrays.<Type>asList(_responseId, _requestId, _fileId, _PubKeyToSymkey, _fileAddr), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Int256> getNumber() {
        Function function = new Function("getNumber", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public static Future<FileInfo> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue, Int256 _number) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_number));
        return deployAsync(FileInfo.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor, initialWeiValue);
    }

    public static Future<FileInfo> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue, Int256 _number) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_number));
        return deployAsync(FileInfo.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor, initialWeiValue);
    }

    public static FileInfo load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new FileInfo(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static FileInfo load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new FileInfo(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static class NewUserEventResponse {
        public Utf8String _json;
    }

    public static class NewFileEventResponse {
        public Utf8String _json;
    }

    public static class NewStatusEventResponse {
        public Utf8String _json;
    }

    public static class RequestFileEventEventResponse {
        public Utf8String state;

        public Utf8String info;
    }

    public static class ResponseFileEventEventResponse {
        public Utf8String state;

        public Utf8String info;
    }
}
