package wrapper;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Future;
import org.bcos.web3j.abi.EventEncoder;
import org.bcos.web3j.abi.EventValues;
import org.bcos.web3j.abi.FunctionEncoder;
import org.bcos.web3j.abi.TypeReference;
import org.bcos.web3j.abi.datatypes.Event;
import org.bcos.web3j.abi.datatypes.Function;
import org.bcos.web3j.abi.datatypes.Type;
import org.bcos.web3j.abi.datatypes.Utf8String;
import org.bcos.web3j.abi.datatypes.generated.Int256;
import org.bcos.web3j.abi.datatypes.generated.Uint256;
import org.bcos.web3j.crypto.Credentials;
import org.bcos.web3j.protocol.Web3j;
import org.bcos.web3j.protocol.core.DefaultBlockParameter;
import org.bcos.web3j.protocol.core.methods.request.EthFilter;
import org.bcos.web3j.protocol.core.methods.response.Log;
import org.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.bcos.web3j.tx.Contract;
import org.bcos.web3j.tx.TransactionManager;
import rx.Observable;
import rx.functions.Func1;

/**
 * Auto generated code.<br>
 * <strong>Do not modify!</strong><br>
 * Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>, or {@link org.bcos.web3j.codegen.SolidityFunctionWrapperGenerator} to update.
 *
 * <p>Generated with web3j version none.
 */
public final class FileInfo extends Contract {
    private static final String BINARY = "6060604052341561000f57600080fd5b60405160208062005d48833981016040528080519060200190919050508060008190555050615d0480620000446000396000f30060606040523615610097576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634086f69b1461009c578063640014d71461014157806371656d76146101a75780637456fed6146103d95780639526419a14610402578063dea4411c1461042b578063ea47b87114610551578063edeaa053146106c3578063f2c9ecd81461082c575b600080fd5b34156100a757600080fd5b6100c66004808035906020019091908035906020019091905050610855565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101065780820151818401526020810190506100eb565b50505050905090810190601f1680156101335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014c57600080fd5b6101a5600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091908035906020019091905050610a8b565b005b34156101b257600080fd5b6103d7600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610d68565b005b34156103e457600080fd5b6103ec6112f2565b6040518082815260200191505060405180910390f35b341561040d57600080fd5b6104156112ff565b6040518082815260200191505060405180910390f35b341561043657600080fd5b61054f600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061130c565b005b341561055c57600080fd5b6106c1600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050612814565b005b34156106ce57600080fd5b61082a600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050612d3f565b005b341561083757600080fd5b61083f612ff0565b6040518082815260200191505060405180910390f35b61085d615aff565b600080600084860292506001858401039150600580549050821015156108d9576000600580549050111561089b5760016005805490500391506108d8565b6040805190810160405280600281526020017f5b5d0000000000000000000000000000000000000000000000000000000000008152509350610a82565b5b6109216040805190810160405280600181526020017f5b0000000000000000000000000000000000000000000000000000000000000081525085612ff990919063ffffffff16565b93508290505b8181111515610a37578281141515610984576109816040805190810160405280600181526020017f2c0000000000000000000000000000000000000000000000000000000000000081525085612ff990919063ffffffff16565b93505b610a28610a19600260058481548110151561099b57fe5b90600052602060002090016040518082805460018160011615610100020316600290048015610a015780601f106109df576101008083540402835291820191610a01565b820191906000526020600020905b8154815290600101906020018083116109ed575b50509150509081526020016040518091039020613061565b85612ff990919063ffffffff16565b93508080600101915050610927565b610a7f6040805190810160405280600181526020017f5d0000000000000000000000000000000000000000000000000000000000000081525085612ff990919063ffffffff16565b93505b50505092915050565b610a93615aff565b600180811115610a9f57fe5b6002846040518082805190602001908083835b602083101515610ad75780518252602082019150602081019050602083039250610ab2565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff166001811115610b2657fe5b141515610b3257610d63565b816002846040518082805190602001908083835b602083101515610b6b5780518252602082019150602081019050602083039250610b46565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206006018190555060206040519081016040528060008152509050610c396040805190810160405280600881526020017f7b225f6964223a22000000000000000000000000000000000000000000000000815250846040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b9050610cc46040805190810160405280600a81526020017f225f737461747573223a00000000000000000000000000000000000000000000815250610c7d8461381b565b6040805190810160405280600181526020017f7d000000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90507f789b8c9ba33acec3ef460cef01e01f58c5970120a15a1de88aab90ac001bea6b816040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d28578082015181840152602081019050610d0d565b50505050905090810190601f168015610d555780820380516001836020036101000a031916815260200191505b509250505060405180910390a15b505050565b600180811115610d7457fe5b6001896040518082805190602001908083835b602083101515610dac5780518252602082019150602081019050602083039250610d87565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060090160009054906101000a900460ff166001811115610dfb57fe5b1415610f2457610e1188888888888888886139f5565b7fde28e2794ca1e2e05ffceb5c4211dfab144ef30223d77e4afb30be56bb63240d610ea560018a6040518082805190602001908083835b602083101515610e6d5780518252602082019150602081019050602083039250610e48565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020613e34565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ee5578082015181840152602081019050610eca565b50505050905090810190601f168015610f125780820380516001836020036101000a031916815260200191505b509250505060405180910390a16112e8565b60006001811115610f3157fe5b6001896040518082805190602001908083835b602083101515610f695780518252602082019150602081019050602083039250610f44565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060090160009054906101000a900460ff166001811115610fb857fe5b1415610ffb5760078054806001018281610fd29190615b13565b916000526020600020900160008a90919091509080519060200190610ff8929190615b3f565b50505b610140604051908101604052808981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020016000815260200160018081111561104b57fe5b8152506001896040518082805190602001908083835b6020831015156110865780518252602082019150602081019050602083039250611061565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000190805190602001906110d5929190615bbf565b5060208201518160010190805190602001906110f2929190615bbf565b50604082015181600201908051906020019061110f929190615bbf565b50606082015181600301908051906020019061112c929190615bbf565b506080820151816004019080519060200190611149929190615bbf565b5060a0820151816005019080519060200190611166929190615bbf565b5060c0820151816006019080519060200190611183929190615bbf565b5060e08201518160070190805190602001906111a0929190615bbf565b5061010082015181600801556101208201518160090160006101000a81548160ff021916908360018111156111d157fe5b02179055509050507fde28e2794ca1e2e05ffceb5c4211dfab144ef30223d77e4afb30be56bb63240d61126d60018a6040518082805190602001908083835b6020831015156112355780518252602082019150602081019050602083039250611210565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020613e34565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156112ad578082015181840152602081019050611292565b50505050905090810190601f1680156112da5780820380516001836020036101000a031916815260200191505b509250505060405180910390a15b5050505050505050565b6000600580549050905090565b6000600780549050905090565b611314615aff565b6000806000602060405190810160405280600081525093506000600181111561133957fe5b6001886040518082805190602001908083835b602083101515611371578051825260208201915060208101905060208303925061134c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060090160009054906101000a900460ff1660018111156113c057fe5b148061145d5750600060018111156113d457fe5b6002896040518082805190602001908083835b60208310151561140c57805182526020820191506020810190506020830392506113e7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff16600181111561145b57fe5b145b156115f4576115186040805190810160405280600981526020017f7b226572726f72223a00000000000000000000000000000000000000000000008152506040805190810160405280602081526020017f22757365724964206f722066696c654964206e6f7420457869737473212121228152506040805190810160405280600181526020017f7d000000000000000000000000000000000000000000000000000000000000008152508761375f909392919063ffffffff16565b93507fdf42631099a4f6c5a9c297f64f6d3524eb3b581aecd0675e408a346e2954e99384604051808060200180602001838103835260018152602001807f3000000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156115b4578082015181840152602081019050611599565b50505050905090810190601f1680156115e15780820380516001836020036101000a031916815260200191505b50935050505060405180910390a161280a565b6117446040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152508460018a6040518082805190602001908083835b6020831015156116665780518252602082019150602081019050602083039250611641565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117305780601f1061170557610100808354040283529160200191611730565b820191906000526020600020905b81548152906001019060200180831161171357829003601f168201915b50505050506148009092919063ffffffff16565b6002886040518082805190602001908083835b60208310151561177c5780518252602082019150602081019050602083039250611757565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002015461186e8460008154811015156117c557fe5b90600052602060002090018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118645780601f1061183957610100808354040283529160200191611864565b820191906000526020600020905b81548152906001019060200180831161184757829003601f168201915b5050505050614956565b1215611a065761192a6040805190810160405280600981526020017f7b226572726f72223a00000000000000000000000000000000000000000000008152506040805190810160405280601f81526020017f22446f6573206e6f74206d6565742074686520737472617465677921212122008152506040805190810160405280600181526020017f7d000000000000000000000000000000000000000000000000000000000000008152508761375f909392919063ffffffff16565b93507fdf42631099a4f6c5a9c297f64f6d3524eb3b581aecd0675e408a346e2954e99384604051808060200180602001838103835260018152602001807f3000000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156119c65780820151818401526020810190506119ab565b50505050905090810190601f1680156119f35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a161280a565b60009150600190505b8280549050811015611c0057611be56002896040518082805190602001908083835b602083101515611a565780518252602082019150602081019050602083039250611a31565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b205780601f10611af557610100808354040283529160200191611b20565b820191906000526020600020905b815481529060010190602001808311611b0357829003601f168201915b50505050508483815481101515611b3357fe5b90600052602060002090018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bd25780601f10611ba757610100808354040283529160200191611bd2565b820191906000526020600020905b815481529060010190602001808311611bb557829003601f168201915b5050505050614c9c90919063ffffffff16565b1515611bf057611bf5565b600191505b806001019050611a0f565b811561265557608060405190810160405280878152602001898152602001888152602001868152506003876040518082805190602001908083835b602083101515611c605780518252602082019150602081019050602083039250611c3b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000019080519060200190611caf929190615bbf565b506020820151816001019080519060200190611ccc929190615bbf565b506040820151816002019080519060200190611ce9929190615bbf565b506060820151816003019080519060200190611d06929190615bbf565b5090505060068054806001018281611d1e9190615b13565b916000526020600020900160008890919091509080519060200190611d44929190615b3f565b50506040805190810160405280600181526020017f7b000000000000000000000000000000000000000000000000000000000000008152509350611f15611ecf6040805190810160405280600681526020017f66696c654964000000000000000000000000000000000000000000000000000081525060018a6040518082805190602001908083835b602083101515611df25780518252602082019150602081019050602083039250611dcd565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ebc5780601f10611e9157610100808354040283529160200191611ebc565b820191906000526020600020905b815481529060010190602001808311611e9f57829003601f168201915b5050505050614dde90919063ffffffff16565b6040805190810160405280600181526020017f2c00000000000000000000000000000000000000000000000000000000000000815250866150559092919063ffffffff16565b93506120ae6120686040805190810160405280600981526020017f72657175657374496400000000000000000000000000000000000000000000008152506003896040518082805190602001908083835b602083101515611f8b5780518252602082019150602081019050602083039250611f66565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120555780601f1061202a57610100808354040283529160200191612055565b820191906000526020600020905b81548152906001019060200180831161203857829003601f168201915b5050505050614dde90919063ffffffff16565b6040805190810160405280600181526020017f2c00000000000000000000000000000000000000000000000000000000000000815250866150559092919063ffffffff16565b93506122476122016040805190810160405280600881526020017f66696c654164647200000000000000000000000000000000000000000000000081525060018a6040518082805190602001908083835b60208310151561212457805182526020820191506020810190506020830392506120ff565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121ee5780601f106121c3576101008083540402835291602001916121ee565b820191906000526020600020905b8154815290600101906020018083116121d157829003601f168201915b5050505050614dde90919063ffffffff16565b6040805190810160405280600181526020017f2c00000000000000000000000000000000000000000000000000000000000000815250866150559092919063ffffffff16565b93506123e061239a6040805190810160405280600e81526020017f5075624b6579546f53796d6b657900000000000000000000000000000000000081525060018a6040518082805190602001908083835b6020831015156122bd5780518252602082019150602081019050602083039250612298565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123875780601f1061235c57610100808354040283529160200191612387565b820191906000526020600020905b81548152906001019060200180831161236a57829003601f168201915b5050505050614dde90919063ffffffff16565b6040805190810160405280600181526020017f2c00000000000000000000000000000000000000000000000000000000000000815250866150559092919063ffffffff16565b93506125796125336040805190810160405280600681526020017f7075624b6579000000000000000000000000000000000000000000000000000081525060028b6040518082805190602001908083835b6020831015156124565780518252602082019150602081019050602083039250612431565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125205780601f106124f557610100808354040283529160200191612520565b820191906000526020600020905b81548152906001019060200180831161250357829003601f168201915b5050505050614dde90919063ffffffff16565b6040805190810160405280600181526020017f7d00000000000000000000000000000000000000000000000000000000000000815250866150559092919063ffffffff16565b93507fdf42631099a4f6c5a9c297f64f6d3524eb3b581aecd0675e408a346e2954e99384604051808060200180602001838103835260018152602001807f3100000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156126155780820151818401526020810190506125fa565b50505050905090810190601f1680156126425780820380516001836020036101000a031916815260200191505b50935050505060405180910390a161280a565b6127326040805190810160405280600981526020017f7b226572726f72223a0000000000000000000000000000000000000000000000815250606060405190810160405280602181526020017f22446f6573206e6f74206d65657420746865206465706172746d656e7421212181526020017f22000000000000000000000000000000000000000000000000000000000000008152506040805190810160405280600181526020017f7d000000000000000000000000000000000000000000000000000000000000008152508761375f909392919063ffffffff16565b93507fdf42631099a4f6c5a9c297f64f6d3524eb3b581aecd0675e408a346e2954e99384604051808060200180602001838103835260018152602001807f3000000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156127ce5780820151818401526020810190506127b3565b50505050905090810190601f1680156127fb5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15b5050505050505050565b60018081111561282057fe5b6002876040518082805190602001908083835b6020831015156128585780518252602082019150602081019050602083039250612833565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff1660018111156128a757fe5b14156129ce576128bb8686868686866150f1565b7f66ab3fea2083d9ba15d99b595186fe7fc18e6eba393c0fc056f420e96c3caa4461294f6002886040518082805190602001908083835b60208310151561291757805182526020820191506020810190506020830392506128f2565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020613061565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561298f578082015181840152602081019050612974565b50505050905090810190601f1680156129bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390a1612d37565b600060018111156129db57fe5b6002876040518082805190602001908083835b602083101515612a1357805182526020820191506020810190506020830392506129ee565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff166001811115612a6257fe5b1415612aa55760058054806001018281612a7c9190615b13565b916000526020600020900160008890919091509080519060200190612aa2929190615b3f565b50505b6101006040519081016040528087815260200186815260200185815260200184815260200183815260200182815260200160008152602001600180811115612ae957fe5b8152506002876040518082805190602001908083835b602083101515612b245780518252602082019150602081019050602083039250612aff565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000019080519060200190612b73929190615bbf565b506020820151816001019080519060200190612b90929190615bbf565b50604082015181600201556060820151816003019080519060200190612bb7929190615bbf565b506080820151816004019080519060200190612bd4929190615bbf565b5060a0820151816005019080519060200190612bf1929190615bbf565b5060c0820151816006015560e08201518160070160006101000a81548160ff02191690836001811115612c2057fe5b02179055509050507f66ab3fea2083d9ba15d99b595186fe7fc18e6eba393c0fc056f420e96c3caa44612cbc6002886040518082805190602001908083835b602083101515612c845780518252602082019150602081019050602083039250612c5f565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020613061565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015612cfc578082015181840152602081019050612ce1565b50505050905090810190601f168015612d295780820380516001836020036101000a031916815260200191505b509250505060405180910390a15b505050505050565b60a060405190810160405280868152602001858152602001848152602001838152602001828152506004866040518082805190602001908083835b602083101515612d9f5780518252602082019150602081019050602083039250612d7a565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000019080519060200190612dee929190615bbf565b506020820151816001019080519060200190612e0b929190615bbf565b506040820151816002019080519060200190612e28929190615bbf565b506060820151816003019080519060200190612e45929190615bbf565b506080820151816004019080519060200190612e62929190615bbf565b5090505060088054806001018281612e7a9190615b13565b916000526020600020900160008790919091509080519060200190612ea0929190615b3f565b50507f9b7f1e7774f1a2492415f0a3969bfd17a6d007836a9bf85b4a84f2f2a50de8f1612f366004876040518082805190602001908083835b602083101515612efe5780518252602082019150602081019050602083039250612ed9565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020615418565b604051808060200180602001838103835260018152602001807f3100000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612fae578082015181840152602081019050612f93565b50505050905090810190601f168015612fdb5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050505050565b60008054905090565b613001615aff565b600080600084518651016040518059106130185750595b90808252806020026020018201604052509350602086019250602085019150602084019050613049818488516159f8565b613058865182018387516159f8565b50505092915050565b613069615aff565b6040805190810160405280600181526020017f7b0000000000000000000000000000000000000000000000000000000000000081525090506131be6040805190810160405280600b81526020017f225f757365724964223a22000000000000000000000000000000000000000000815250836000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156131725780601f1061314757610100808354040283529160200191613172565b820191906000526020600020905b81548152906001019060200180831161315557829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506132dd6040805190810160405280600b81526020017f225f7075624b6579223a22000000000000000000000000000000000000000000815250836001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156132915780601f1061326657610100808354040283529160200191613291565b820191906000526020600020905b81548152906001019060200180831161327457829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b905061336c6040805190810160405280600981526020017f225f72616e6b223a220000000000000000000000000000000000000000000000815250613325846002015461381b565b6040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b905061348b6040805190810160405280600f81526020017f225f6465706172746d656e74223a220000000000000000000000000000000000815250836003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561343f5780601f106134145761010080835404028352916020019161343f565b820191906000526020600020905b81548152906001019060200180831161342257829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506135aa6040805190810160405280600f81526020017f225f63726561746554696d65223a220000000000000000000000000000000000815250836004018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561355e5780601f106135335761010080835404028352916020019161355e565b820191906000526020600020905b81548152906001019060200180831161354157829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506136c96040805190810160405280600f81526020017f225f75706461746554696d65223a220000000000000000000000000000000000815250836005018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561367d5780601f106136525761010080835404028352916020019161367d565b820191906000526020600020905b81548152906001019060200180831161366057829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506137586040805190810160405280600a81526020017f225f737461747573223a00000000000000000000000000000000000000000000815250613711846006015461381b565b6040805190810160405280600181526020017f7d000000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b9050919050565b613767615aff565b600080600080600080875189518b518d510101016040518059106137885750595b9080825280602002602001820160405250965060208b01955060208a019450602089019350602088019250602087019150600090506137cb818301878d516159f8565b8a51810190506137df818301868c516159f8565b8951810190506137f3818301858b516159f8565b885181019050613807818301848a516159f8565b875181019050505050505050949350505050565b613823615aff565b600080600080600080871415613870576040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525095506139eb565b86945060019350600092506000871215613897578660000394506000935082806001019350505b8491505b60008211156138c057600a828115156138b057fe5b049150828060010193505061389b565b8260ff166040518059106138d15750595b9080825280602002602001820160405250955083151561394c577f2d0000000000000000000000000000000000000000000000000000000000000086600081518110151561391b57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b6001830390505b60008511156139ea576030600a8681151561396a57fe5b06017f01000000000000000000000000000000000000000000000000000000000000000286828060019003935060ff168151811015156139a657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a858115156139e257fe5b049450613953565b5b5050505050919050565b600180811115613a0157fe5b6002896040518082805190602001908083835b602083101515613a395780518252602082019150602081019050602083039250613a14565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff166001811115613a8857fe5b141515613a9457613e2a565b866001896040518082805190602001908083835b602083101515613acd5780518252602082019150602081019050602083039250613aa8565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001019080519060200190613b16929190615b3f565b50856001896040518082805190602001908083835b602083101515613b505780518252602082019150602081019050602083039250613b2b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002019080519060200190613b99929190615b3f565b50846001896040518082805190602001908083835b602083101515613bd35780518252602082019150602081019050602083039250613bae565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003019080519060200190613c1c929190615b3f565b50836001896040518082805190602001908083835b602083101515613c565780518252602082019150602081019050602083039250613c31565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206004019080519060200190613c9f929190615b3f565b50826001896040518082805190602001908083835b602083101515613cd95780518252602082019150602081019050602083039250613cb4565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206005019080519060200190613d22929190615b3f565b50816001896040518082805190602001908083835b602083101515613d5c5780518252602082019150602081019050602083039250613d37565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206006019080519060200190613da5929190615b3f565b50806001896040518082805190602001908083835b602083101515613ddf5780518252602082019150602081019050602083039250613dba565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206007019080519060200190613e28929190615b3f565b505b5050505050505050565b613e3c615aff565b6040805190810160405280600181526020017f7b000000000000000000000000000000000000000000000000000000000000008152509050613f916040805190810160405280600b81526020017f225f66696c654964223a22000000000000000000000000000000000000000000815250836000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613f455780601f10613f1a57610100808354040283529160200191613f45565b820191906000526020600020905b815481529060010190602001808311613f2857829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506140b06040805190810160405280600d81526020017f225f66696c6541646472223a2200000000000000000000000000000000000000815250836001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156140645780601f1061403957610100808354040283529160200191614064565b820191906000526020600020905b81548152906001019060200180831161404757829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506141cf6040805190810160405280601381526020017f225f5075624b6579546f53796d6b6579223a2200000000000000000000000000815250836002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156141835780601f1061415857610100808354040283529160200191614183565b820191906000526020600020905b81548152906001019060200180831161416657829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506142ee6040805190810160405280600981526020017f225f706c6f74223a220000000000000000000000000000000000000000000000815250836003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156142a25780601f10614277576101008083540402835291602001916142a2565b820191906000526020600020905b81548152906001019060200180831161428557829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b905061440d6040805190810160405280601081526020017f225f6465736372697074696f6e223a2200000000000000000000000000000000815250836004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156143c15780601f10614396576101008083540402835291602001916143c1565b820191906000526020600020905b8154815290600101906020018083116143a457829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b905061452c6040805190810160405280600f81526020017f225f75706c6f616454696d65223a220000000000000000000000000000000000815250836005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156144e05780601f106144b5576101008083540402835291602001916144e0565b820191906000526020600020905b8154815290600101906020018083116144c357829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b905061464b6040805190810160405280600b81526020017f225f757365724964223a22000000000000000000000000000000000000000000815250836006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156145ff5780601f106145d4576101008083540402835291602001916145ff565b820191906000526020600020905b8154815290600101906020018083116145e257829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b905061476a6040805190810160405280600f81526020017f225f6465706172746d656e74223a220000000000000000000000000000000000815250836007018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561471e5780601f106146f35761010080835404028352916020019161471e565b820191906000526020600020905b81548152906001019060200180831161470157829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506147f96040805190810160405280600a81526020017f225f737461747573223a000000000000000000000000000000000000000000008152506147b2846008015461381b565b6040805190810160405280600181526020017f7d000000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b9050919050565b600080600080600080614811615aff565b60008097505b888054905088101561485357888881548110151561483157fe5b906000526020600020900160006148489190615c3f565b876001019750614817565b600089816148619190615b13565b5060208b01965060208a019550600094505b600115614949576000925060008a5111156148ba578661489b868d5103878a018d518a615a43565b0393508a518410156148b057600192506148b5565b8a5193505b6148bf565b8a5193505b8484036040518059106148cf5750595b908082528060200260200182016040525091506020820190506148f7818689018787036159f8565b8951840194508880548060010182816149109190615b13565b916000526020600020900160008490919091509080519060200190614936929190615b3f565b505082151561494457614949565b614873565b5050505050505050505050565b6000806000806000935060008551141561496f57614c94565b600092505b84518361ffff161015614a4a57848361ffff1681518110151561499357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004915060208260ff161480614a18575060098260ff16145b80614a265750600d8260ff16145b80614a345750600a8260ff16145b1515614a3f57614a4a565b826001019250614974565b600190507f2b00000000000000000000000000000000000000000000000000000000000000858461ffff16815181101515614a8157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415614b0557600190508280600101935050614bb9565b7f2d00000000000000000000000000000000000000000000000000000000000000858461ffff16815181101515614b3857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415614bb8576000905082806001019350505b5b5b84518361ffff161015614c8557848361ffff16815181101515614bd957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004915060308260ff1610158015614c61575060398260ff1611155b1515614c6c57614c94565b6030820360ff16600a8502019350826001019250614bba565b801515614c93578360000393505b5b505050919050565b60008082518451141515614cb35760009150614dd7565b600090505b8351811015614dd2578281815181101515614ccf57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168482815181101515614d4a57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515614dc75760009150614dd7565b806001019050614cb8565b600191505b5092915050565b614de6615aff565b6000806000806005865188510101604051805910614e015750595b90808252806020026020018201604052509450602087019350602086019250602085019150600090507f22000000000000000000000000000000000000000000000000000000000000008582806001019350815181101515614e5f57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350614e9d8183018488516159f8565b8551810190507f22000000000000000000000000000000000000000000000000000000000000008582806001019350815181101515614ed857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f3a000000000000000000000000000000000000000000000000000000000000008582806001019350815181101515614f3d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f22000000000000000000000000000000000000000000000000000000000000008582806001019350815181101515614fa257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350614fe08183018589516159f8565b8651810190507f2200000000000000000000000000000000000000000000000000000000000000858280600101935081518110151561501b57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505050505092915050565b61505d615aff565b6000806000806000865188518a51010160405180591061507a5750595b90808252806020026020018201604052509550602089019450602088019350602087019250602086019150600090506150b7818301868b516159f8565b8851810190506150cb818301858a516159f8565b8751810190506150df8183018489516159f8565b86518101905050505050509392505050565b6001808111156150fd57fe5b6002876040518082805190602001908083835b6020831015156151355780518252602082019150602081019050602083039250615110565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060070160009054906101000a900460ff16600181111561518457fe5b14151561519057615410565b846002876040518082805190602001908083835b6020831015156151c957805182526020820191506020810190506020830392506151a4565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001019080519060200190615212929190615b3f565b50836002876040518082805190602001908083835b60208310151561524c5780518252602082019150602081019050602083039250615227565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020181905550826002876040518082805190602001908083835b6020831015156152bf578051825260208201915060208101905060208303925061529a565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003019080519060200190615308929190615b3f565b50816002876040518082805190602001908083835b602083101515615342578051825260208201915060208101905060208303925061531d565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600401908051906020019061538b929190615b3f565b50806002876040518082805190602001908083835b6020831015156153c557805182526020820191506020810190506020830392506153a0565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600501908051906020019061540e929190615b3f565b505b505050505050565b615420615aff565b6040805190810160405280600181526020017f7b0000000000000000000000000000000000000000000000000000000000000081525090506155756040805190810160405280600f81526020017f225f726573706f6e73654964223a220000000000000000000000000000000000815250836000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156155295780601f106154fe57610100808354040283529160200191615529565b820191906000526020600020905b81548152906001019060200180831161550c57829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506156946040805190810160405280600e81526020017f225f726571756573744964223a22000000000000000000000000000000000000815250836001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156156485780601f1061561d57610100808354040283529160200191615648565b820191906000526020600020905b81548152906001019060200180831161562b57829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506157b36040805190810160405280600b81526020017f225f66696c654964223a22000000000000000000000000000000000000000000815250836002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156157675780601f1061573c57610100808354040283529160200191615767565b820191906000526020600020905b81548152906001019060200180831161574a57829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506158d26040805190810160405280601381526020017f225f5075624b6579546f53796d6b6579223a2200000000000000000000000000815250836003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156158865780601f1061585b57610100808354040283529160200191615886565b820191906000526020600020905b81548152906001019060200180831161586957829003601f168201915b50505050506040805190810160405280600281526020017f222c0000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b90506159f16040805190810160405280600c81526020017f225f66696c6541646472223a0000000000000000000000000000000000000000815250836004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156159a55780601f1061597a576101008083540402835291602001916159a5565b820191906000526020600020905b81548152906001019060200180831161598857829003601f168201915b50505050506040805190810160405280600181526020017f7d000000000000000000000000000000000000000000000000000000000000008152508461375f909392919063ffffffff16565b9050919050565b60005b602082101515615a2057825184526020840193506020830192506020820391506159fb565b6001826020036101000a0390508019835116818551168181178652505050505050565b60008060008060008887111515615aed57602087111515615aa45760018760200360080260020a031980875116888b038a018a96505b818388511614615a9957600187019650806001880310615a79578b8b0196505b505050839450615af3565b8686209150879350600092505b86890383111515615aec578684209050806000191682600019161415615ad957839450615af3565b6001840193508280600101935050615ab1565b5b88880194505b50505050949350505050565b602060405190810160405280600081525090565b815481835581811511615b3a57818360005260206000209182019101615b399190615c87565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615b8057805160ff1916838001178555615bae565b82800160010185558215615bae579182015b82811115615bad578251825591602001919060010190615b92565b5b509050615bbb9190615cb3565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615c0057805160ff1916838001178555615c2e565b82800160010185558215615c2e579182015b82811115615c2d578251825591602001919060010190615c12565b5b509050615c3b9190615cb3565b5090565b50805460018160011615610100020316600290046000825580601f10615c655750615c84565b601f016020900490600052602060002090810190615c839190615cb3565b5b50565b615cb091905b80821115615cac5760008181615ca39190615c3f565b50600101615c8d565b5090565b90565b615cd591905b80821115615cd1576000816000905550600101615cb9565b5090565b905600a165627a7a723058201dfc0938fa50adf9814c6aeeda4d8dddda64697ad721f745a98d02912df0777a0029";

    private FileInfo(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    private FileInfo(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public List<NewUserEventResponse> getNewUserEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("NewUser", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<NewUserEventResponse> responses = new ArrayList<NewUserEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            NewUserEventResponse typedResponse = new NewUserEventResponse();
            typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<NewUserEventResponse> newUserEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("NewUser", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, NewUserEventResponse>() {
            @Override
            public NewUserEventResponse call(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                NewUserEventResponse typedResponse = new NewUserEventResponse();
                typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public List<NewFileEventResponse> getNewFileEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("NewFile", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<NewFileEventResponse> responses = new ArrayList<NewFileEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            NewFileEventResponse typedResponse = new NewFileEventResponse();
            typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<NewFileEventResponse> newFileEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("NewFile", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, NewFileEventResponse>() {
            @Override
            public NewFileEventResponse call(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                NewFileEventResponse typedResponse = new NewFileEventResponse();
                typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public List<NewStatusEventResponse> getNewStatusEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("NewStatus", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<NewStatusEventResponse> responses = new ArrayList<NewStatusEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            NewStatusEventResponse typedResponse = new NewStatusEventResponse();
            typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<NewStatusEventResponse> newStatusEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("NewStatus", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, NewStatusEventResponse>() {
            @Override
            public NewStatusEventResponse call(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                NewStatusEventResponse typedResponse = new NewStatusEventResponse();
                typedResponse._json = (Utf8String) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public List<RequestFileEventEventResponse> getRequestFileEventEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("RequestFileEvent", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<RequestFileEventEventResponse> responses = new ArrayList<RequestFileEventEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            RequestFileEventEventResponse typedResponse = new RequestFileEventEventResponse();
            typedResponse.state = (Utf8String) eventValues.getNonIndexedValues().get(0);
            typedResponse.info = (Utf8String) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<RequestFileEventEventResponse> requestFileEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("RequestFileEvent", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, RequestFileEventEventResponse>() {
            @Override
            public RequestFileEventEventResponse call(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                RequestFileEventEventResponse typedResponse = new RequestFileEventEventResponse();
                typedResponse.state = (Utf8String) eventValues.getNonIndexedValues().get(0);
                typedResponse.info = (Utf8String) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public List<ResponseFileEventEventResponse> getResponseFileEventEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("ResponseFileEvent", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<EventValues> valueList = extractEventParameters(event, transactionReceipt);
        ArrayList<ResponseFileEventEventResponse> responses = new ArrayList<ResponseFileEventEventResponse>(valueList.size());
        for (EventValues eventValues : valueList) {
            ResponseFileEventEventResponse typedResponse = new ResponseFileEventEventResponse();
            typedResponse.state = (Utf8String) eventValues.getNonIndexedValues().get(0);
            typedResponse.info = (Utf8String) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ResponseFileEventEventResponse> responseFileEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("ResponseFileEvent", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, ResponseFileEventEventResponse>() {
            @Override
            public ResponseFileEventEventResponse call(Log log) {
                EventValues eventValues = extractEventParameters(event, log);
                ResponseFileEventEventResponse typedResponse = new ResponseFileEventEventResponse();
                typedResponse.state = (Utf8String) eventValues.getNonIndexedValues().get(0);
                typedResponse.info = (Utf8String) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Future<Utf8String> getUserByPage(Uint256 _pageNo, Uint256 _pageSize) {
        Function function = new Function("getUserByPage", 
                Arrays.<Type>asList(_pageNo, _pageSize), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> updateStatus(Utf8String _id, Int256 _status) {
        Function function = new Function("updateStatus", Arrays.<Type>asList(_id, _status), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> UploadFile(Utf8String _fileId, Utf8String _fileAddr, Utf8String _PubKeyToSymkey, Utf8String _plot, Utf8String _description, Utf8String _uploadTime, Utf8String _userId, Utf8String _department) {
        Function function = new Function("UploadFile", Arrays.<Type>asList(_fileId, _fileAddr, _PubKeyToSymkey, _plot, _description, _uploadTime, _userId, _department), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Uint256> getUserLength() {
        Function function = new Function("getUserLength", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Uint256> getFileLength() {
        Function function = new Function("getFileLength", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> RequestFile(Utf8String _userId, Utf8String _fileId, Utf8String _requestId, Utf8String _requestTime) {
        Function function = new Function("RequestFile", Arrays.<Type>asList(_userId, _fileId, _requestId, _requestTime), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> addUser(Utf8String _userId, Utf8String _pubKey, Int256 _rank, Utf8String _department, Utf8String _createTime, Utf8String _updateTime) {
        Function function = new Function("addUser", Arrays.<Type>asList(_userId, _pubKey, _rank, _department, _createTime, _updateTime), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> ResponseFile(Utf8String _responseId, Utf8String _requestId, Utf8String _fileId, Utf8String _PubKeyToSymkey, Utf8String _fileAddr) {
        Function function = new Function("ResponseFile", Arrays.<Type>asList(_responseId, _requestId, _fileId, _PubKeyToSymkey, _fileAddr), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Int256> getNumber() {
        Function function = new Function("getNumber", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public static Future<FileInfo> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue, Int256 _number) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_number));
        return deployAsync(FileInfo.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor, initialWeiValue);
    }

    public static Future<FileInfo> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue, Int256 _number) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_number));
        return deployAsync(FileInfo.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor, initialWeiValue);
    }

    public static FileInfo load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new FileInfo(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static FileInfo load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new FileInfo(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static class NewUserEventResponse {
        public Utf8String _json;
    }

    public static class NewFileEventResponse {
        public Utf8String _json;
    }

    public static class NewStatusEventResponse {
        public Utf8String _json;
    }

    public static class RequestFileEventEventResponse {
        public Utf8String state;

        public Utf8String info;
    }

    public static class ResponseFileEventEventResponse {
        public Utf8String state;

        public Utf8String info;
    }
}
